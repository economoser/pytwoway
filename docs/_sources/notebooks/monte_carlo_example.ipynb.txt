{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Monte Carlo example"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2020-12-22T21:42:40.756437Z",
     "start_time": "2020-12-22T21:42:39.576929Z"
    }
   },
   "outputs": [],
   "source": [
    "import os, sys\n",
    "# Navigate to parent folder for import\n",
    "os.chdir('../../..')\n",
    "from pytwoway import sim_twfe_network as sn\n",
    "\n",
    "# Weird code needed for output to show\n",
    "os.chdir('docs-src/source/notebooks')\n",
    "stdout = sys.stdout\n",
    "sys.path.insert(1, os.path.join(sys.path[0], '..'))\n",
    "sys.stdout = stdout"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## First, optionally set parameter values for the simulated data"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2020-12-22T21:42:40.761257Z",
     "start_time": "2020-12-22T21:42:40.758033Z"
    }
   },
   "outputs": [],
   "source": [
    "sim_params = {'num_ind': 10000, 'num_time': 5, 'firm_size': 50, 'nk': 10, 'nl': 5, 'alpha_sig': 1, 'psi_sig': 1, 'w_sig': 5, 'csort': 1, 'cnetw': 1, 'csig': 1, 'p_move': 0.5}"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Second, create a stwn object using the parameter choices"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2020-12-22T21:42:40.768940Z",
     "start_time": "2020-12-22T21:42:40.765231Z"
    }
   },
   "outputs": [],
   "source": [
    "smc_net = sn.TwoWayMonteCarlo(sim_params) # smc_net for simulated Monte Carlo two-way network"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Third, optionally set parameter values for the Monte Carlo simulation"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2020-12-22T21:42:40.777568Z",
     "start_time": "2020-12-22T21:42:40.772602Z"
    }
   },
   "outputs": [],
   "source": [
    "# For FE estimation\n",
    "fe_params = {'ncore': 1, 'batch': 1, 'ndraw_pii': 50, 'ndraw_tr': 5, 'check': False, 'hetero': False, 'out': 'res_akm.json', 'con': False, 'logfile': '', 'levfile': '', 'statsonly': False, 'Q': 'cov(alpha, psi)'}\n",
    "\n",
    "# For CRE estimation\n",
    "cre_params = {'ncore': 1, 'ndraw_tr': 5, 'ndp': 50, 'out': 'res_cre.json', 'posterior': False, 'wobtw': False}\n",
    "\n",
    "# For clustering (specifically for the KMeans algorithm)\n",
    "KMeans_params = {'n_clusters': 10, 'init': 'k-means++', 'n_init': 500, 'max_iter': 300, 'tol': 0.0001, 'precompute_distances': 'deprecated', 'verbose': 0, 'random_state': None, 'copy_x': True, 'n_jobs': 'deprecated', 'algorithm': 'auto'}\n",
    "\n",
    "# For clustering\n",
    "cluster_params = {'cdf_resolution': 10, 'grouping': 'quantile_all', 'year': None, 'user_KMeans': KMeans_params}"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Fourth, run the Monte Carlo simulation using the parameter choices"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2020-12-22T21:43:16.646468Z",
     "start_time": "2020-12-22T21:42:40.780053Z"
    },
    "scrolled": true
   },
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 5/5 [00:00<00:00, 166.99it/s]\n",
      "\n",
      "\n",
      "100%|██████████| 5/5 [00:00<00:00, 157.26it/s]\n",
      "100%|██████████| 5/5 [00:00<00:00, 165.09it/s]\n",
      "  0%|          | 0/5 [00:00<?, ?it/s]8.47it/s]\n",
      "100%|██████████| 5/5 [00:00<00:00, 126.27it/s]\n",
      "100%|██████████| 5/5 [00:00<00:00, 125.60it/s]\n",
      "100%|██████████| 5/5 [00:00<00:00, 158.39it/s]\n",
      "100%|██████████| 5/5 [00:00<00:00, 150.52it/s]\n",
      "100%|██████████| 5/5 [00:00<00:00, 157.03it/s]\n",
      "100%|██████████| 5/5 [00:00<00:00, 139.80it/s]\n",
      "100%|██████████| 5/5 [00:00<00:00, 138.76it/s]\n",
      "100%|██████████| 5/5 [00:00<00:00, 125.01it/s]\n",
      "100%|██████████| 5/5 [00:00<00:00, 133.97it/s]\n",
      "100%|██████████| 5/5 [00:00<00:00, 140.17it/s]\n",
      "100%|██████████| 5/5 [00:00<00:00, 145.45it/s]\n",
      "100%|██████████| 5/5 [00:00<00:00, 139.66it/s]\n",
      "100%|██████████| 5/5 [00:00<00:00, 154.35it/s]\n",
      "100%|██████████| 5/5 [00:00<00:00, 31.31it/s]\n",
      "100%|██████████| 5/5 [00:00<00:00, 120.09it/s]\n",
      "100%|██████████| 5/5 [00:00<00:00, 129.36it/s]\n",
      "100%|██████████| 5/5 [00:00<00:00, 140.20it/s]\n",
      "100%|██████████| 5/5 [00:00<00:00, 140.39it/s]\n",
      "100%|██████████| 5/5 [00:00<00:00, 132.53it/s]\n",
      "100%|██████████| 5/5 [00:00<00:00, 133.97it/s]\n",
      "100%|██████████| 5/5 [00:00<00:00, 29.08it/s]\n",
      "100%|██████████| 5/5 [00:00<00:00, 111.85it/s]\n",
      "100%|██████████| 5/5 [00:00<00:00, 117.10it/s]\n",
      "100%|██████████| 5/5 [00:00<00:00, 104.40it/s]\n",
      "100%|██████████| 5/5 [00:00<00:00, 27.03it/s]\n",
      "100%|██████████| 5/5 [00:00<00:00, 23.32it/s]\n",
      "100%|██████████| 5/5 [00:00<00:00, 102.94it/s]\n",
      "100%|██████████| 5/5 [00:00<00:00, 111.33it/s]\n",
      "100%|██████████| 5/5 [00:00<00:00, 24.73it/s]\n",
      "100%|██████████| 5/5 [00:00<00:00, 118.88it/s]\n",
      "100%|██████████| 5/5 [00:00<00:00, 110.45it/s]\n",
      "\n",
      "100%|██████████| 5/5 [00:00<00:00, 103.43it/s]\n",
      "100%|██████████| 5/5 [00:00<00:00, 111.72it/s]\n",
      "100%|██████████| 5/5 [00:00<00:00, 113.16it/s]\n",
      "100%|██████████| 5/5 [00:00<00:00, 103.98it/s]\n",
      "100%|██████████| 5/5 [00:00<00:00, 21.90it/s]\n",
      "100%|██████████| 5/5 [00:00<00:00, 87.81it/s]\n",
      "100%|██████████| 5/5 [00:00<00:00, 103.03it/s]\n",
      "100%|██████████| 5/5 [00:00<00:00, 88.83it/s]\n",
      "100%|██████████| 5/5 [00:00<00:00, 100.73it/s]\n",
      "100%|██████████| 5/5 [00:00<00:00, 106.81it/s]\n",
      "100%|██████████| 5/5 [00:00<00:00, 114.51it/s]\n",
      "100%|██████████| 5/5 [00:00<00:00, 134.66it/s]\n"
     ]
    }
   ],
   "source": [
    "smc_net.twfe_monte_carlo(N=50, ncore=4, fe_params=fe_params, cre_params=cre_params, cluster_params=cluster_params)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Fifth and finally, plot parameter estimates (plots show the difference from the truth)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2020-12-22T21:43:17.415199Z",
     "start_time": "2020-12-22T21:43:16.649221Z"
    }
   },
   "outputs": [
    {
     "data": {
      "image/png": "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evVizZo1hISE0KBBA6+z5cps3ryZ5557jgULFgShyouHt59bY0x6RVd9q9eHyEWgbt26TJs2ja+//rpK2zl8+DDTp08PUFXiKx36ELlI9O3b17l/PrNpgD59+gSqHPGDZtQiIi6noBYRcTkFtYiIyymoRURcTkEttYu3Tn5VufkgJCSE2NhYOnbsSFxcHJ9//jkABw4cYPjw4cEcbdBlZGTwj3/8w+/1evbsSUWn6B46dIjQ0FD+/ve/l3o+MjKSw4c9Le/T09OJiopi8+bNzJs3D2MMH3/8sbPskiVLMMY4F+0E2vPPP89rr73m93olP/PMzEzuvPPOgNSjoBaporp165KRkcGWLVt45plnePTRRwH44Q9/GLQg8VVhYeE5H1fmfIP6XN58800SEhJK9UQpaevWrQwfPpzU1FQ6deoEQHR0dKnlFy1aRMeOHQNaF8CZM2c4c+YMc+fO5ec//7nf65f8zKOjo8nNzWXfvn1VrktBLRJAR48edfpN5+TkOJda5+Tk0L17d+Li4krNug8ePMiNN95IbGwsHTp08NqVrrCwkN/97ndER0cTExPDiy++CMDHH39Mp06diI6OZty4cZw6dQrwzEyffPJJEhMTefPNN8s9Xr58Oddffz1xcXHceuutzql6GzZs4IYbbqBjx4507dqV/Px8pkyZQmpqKrGxsaSmpnLixAnGjRtHly5d6NSpk9NPu6CggJEjRxITE8OIESMoKCio8D1KSUnhz3/+M7m5ueXO696+fTuDBw9mwYIFzhWYAN27d+eLL77g+++/5/jx4+zevZvY2Nhy296+fXup9XJycoiJiQHgySefpEuXLnTo0IEJEyZQfLFfz549eeyxx+jRowcvvPACn3zyCXFxcU5Tqp49ezJp0iRuuOEGOnTo4LR4/fTTT4mNjSU2NpZOnTpx7NixUp85wM9+9rMKe5T7Q0EtUkUFBQXExsbStm1b7rnnHh5//PFyyzRv3pyPPvqITZs2kZqayq9//WvA02ejb9++zozcW/jMmTOHr776ymk/Onr0aE6ePMmdd95JamoqmZmZnDlzhlmzZjnrhIWFsXr1aqerX/Hj3r1789RTT7FixQo2bdpEfHw8zz33HKdPn2bEiBG88MILbNmyhRUrVlC/fn2efPJJRowYQUZGBiNGjODpp5/mpptuYsOGDaxcuZKHHnqIEydOMGvWLOrVq8fWrVv5/e9/T3p6utf3av/+/XzzzTd07dqV2267zenHXWzQoEHMnDmTxMTEUs8bY+jduzcffvgh7733HgMHDvS6/Xbt2nH69Gn+9a9/AZ6WsLfddhsAEydOZMOGDWRlZVFQUMD777/vrHfkyBE+/fRTHnzwwXItYcHTFvbzzz/nb3/7G+PGjQPg2Wef5a9//SsZGRl89tlnXhtVBaolrIJapIqKD33s2LGDDz74gDvuuIOyrRm+//57xo8fT3R0NLfeeivZ2dkAdOnShVdffZWpU6eSmZnp/FmuklasWMG9997rzPAuv/xydu7cSVRUFNdccw0AY8eOZdWqVc46xY2byj5et24d2dnZdOvWjdjYWObPn8/evXvZuXMnLVq0oEuXLgBcdtllXtucLl++nKSkJGJjY51uffv27WPVqlWMGTMG8LRKLZ7FlrVo0SInOMu2hAXo3bs3L7/8stdDNCNHjmTRokUsWrSIUaNGed0+wG233ea0lS3Zu3vlypVcd911REdH88knn5TqDFjy/SrbEhZw9nfjjTdy9OhRjhw5Qrdu3fjtb39LcnIyR44c8fp+BaolrIJaJICuv/56Dh8+TNk/R/eXv/yFK664gi1btrBx40ZOnz4NeP7HX7VqFVdddRW33347r732GkuWLHF+pd64cSPW2nJ/ubqyHj3169f3+thaS58+fcjIyCAjI4Ps7GxeeeUVr/vwxlrL22+/7ay/b98+p2eFL+unpKQwb948IiMjGThwIFu2bHF6aAPMnDkTwGs3wa5du5KVlcXhw4edf6C8KW4Ju2vXLowxtG7dmpMnT3Lffffx1ltvkZmZyfjx40u1fS35fnlrCVt2bMYYJk+ezMsvv0xBQQEJCQns2LGjXC2BagmroBYJoB07dlBYWEjTpk1LPZ+fn0+LFi2oU6cOCxYscGaMe/fupXnz5owfP567776bTZs2MWTIECcI4+Pj+clPfsLs2bM5c+YMAP/+979p27YtOTk5TuvSBQsW0KNHj0rrS0hIYM2aNc56//3vf9m1axdt27blwIEDbNiwAYBjx45x5swZGjZsyLFjx5z1+/bty4svvuj8Q7F582bA8w/OG2+8AUBWVhZbt24tt++dO3dy4sQJvv76a3JycsjJyeHRRx8tdQy3Tp06pKSksHPnTqZMmVJuG8888wx//OMfzznGq6++mpCQEKZPn+7MlIuDt1mzZhw/fvycX/KWbQkLOIdoVq9eTaNGjWjUqBF79uwhOjqaRx55hPj4eK9BHaiWsOr1IbVLNXXtK6n4GDV4Zpzz588v1bQfPDPEYcOG8eabb9KrVy9nBpeWlsaf/vQnQkNDadCggddTwu655x527dpFTEwMoaGhjB8/nokTJ/Lqq69y6623cubMGbp06cK9995baa3h4eHMmzePUaNGOV8+PvXUU1xzzTWkpqZy//33U1BQQN26dVmxYgW9evVyDnU8+uijPP7440yaNImYmBistURGRvL+++/zy1/+krvuuouYmBhiY2NLfaFXLCUlhSFDhpR6btiwYYwcObLUcf1LL72U9957jx49enDFFVeUmu3279+/0jGCZ1b90EMP8dVXXwHQuHFj59BTZGSkc4jHm/79+3P77beXeq5JkybccMMNHD16lLlz5wKeU/hWrlxJSEgI7du3p3///hw8eLDUeitXrmTAgKq33lWb01pEbU5FAmPIkCHMmDGD1q1b07NnT5599lni4712IK3QqVOn6NGjB6tXry53/FptTkVEqigpKanc7Nhf+/btIykpqcK/PekPHfoQESmjTZs2tGnTBvAcnjofrVu3pnXr1gGpRzNqERGXU1CLiLicglpExOUU1CIiLqcvE6VWKXmKYiD4cprjN998w6RJk9iwYQOXXnopkZGRPP/88/zgBz+gXbt2tGnThtOnTxMfH88rr7xCaGgoaWlpDBo0iKioKGc7zz77LL179w5o/QDDhw9nxowZtGrVyq/1li5dSnZ2NpMnT2bmzJnUr1+fu+66K+D1SeUU1CJVYK1lyJAhjB071rnCLiMjg2+//ZYf/ehHXH311WRkZFBYWEifPn1YvHgxo0ePBjwd4Uo2Bgq0wsJC50pJf0MaYODAgU7zo3HjxtGtWzcFdQ3RoQ+RKli5ciWhoaGlrgqMjY2le/fupZYLCQmha9eu5dp6nsusWbN4+OGHncfz5s3j/vvvB2Dw4MF07tyZa6+9ljlz5jjLNGjQgClTpnDdddexdu1a3njjDQYNGlTq9QcffJC4uDhuvvlmpydJcnIy7du3JyYmxum4N2/ePCZOnAhAvXr1iIyMdFp8SvVSUItUQVZWVrmWmN6cPHmS9evX069fP+e5zz77zGm+FBsby549e0qtM3z4cN555x3n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\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "smc_net.plot_monte_carlo()"
   ]
  }
 ],
 "metadata": {
  "celltoolbar": "Tags",
  "hide_input": false,
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.7.9"
  },
  "latex_envs": {
   "LaTeX_envs_menu_present": true,
   "autoclose": false,
   "autocomplete": true,
   "bibliofile": "biblio.bib",
   "cite_by": "apalike",
   "current_citInitial": 1,
   "eqLabelWithNumbers": true,
   "eqNumInitial": 1,
   "hotkeys": {
    "equation": "Ctrl-E",
    "itemize": "Ctrl-I"
   },
   "labels_anchors": false,
   "latex_user_defs": false,
   "report_style_numbering": false,
   "user_envs_cfg": false
  },
  "nbsphinx-toctree": {
   "hidden": true,
   "maxdepth": 1,
   "titlesonly": true
  },
  "toc": {
   "base_numbering": 1,
   "nav_menu": {},
   "number_sections": true,
   "sideBar": true,
   "skip_h1_title": false,
   "title_cell": "Table of Contents",
   "title_sidebar": "Contents",
   "toc_cell": false,
   "toc_position": {},
   "toc_section_display": true,
   "toc_window_display": false
  },
  "varInspector": {
   "cols": {
    "lenName": 16,
    "lenType": 16,
    "lenVar": 40
   },
   "kernels_config": {
    "python": {
     "delete_cmd_postfix": "",
     "delete_cmd_prefix": "del ",
     "library": "var_list.py",
     "varRefreshCmd": "print(var_dic_list())"
    },
    "r": {
     "delete_cmd_postfix": ") ",
     "delete_cmd_prefix": "rm(",
     "library": "var_list.r",
     "varRefreshCmd": "cat(var_dic_list()) "
    }
   },
   "types_to_exclude": [
    "module",
    "function",
    "builtin_function_or_method",
    "instance",
    "_Feature"
   ],
   "window_display": false
  }
 },
 "nbformat": 4,
 "nbformat_minor": 4
}
